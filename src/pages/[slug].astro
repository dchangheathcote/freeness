---
import { allTheDatas, getTheSlug } from "../utils/GameData.js";
import MainLayout from "../layouts/MainLayout.astro";
import Footer from "../components/Footer.astro";
/**
 * getTheSlug() creates a unique slug based on the game title instead of using the id as the unique page name
 *
 * build static pages for each game page using getTheSlug() for [slug]
 * I wanted to test out the [slug] parameter from astro, and was trying to be thorough
 *
 * short of doing a forloop for the 366 game titles, i 'cheated' and copied all of the data
 * and stored it in allTheDatas() in GameData.js
 *
 * moving forward I would instead try to pass the id from index, do the API call
 * and build the page dynamically.
 *
 * currently because of the static pages, if there is a new game added from the API, I would have to manually update
 * allTheDatas() and rebuild the entire site.
 *
 * so while this page was a good learning experience, ultimately it's kind of pointless
 *
 */
export async function getStaticPaths() {
  const gameData = allTheDatas();
  return gameData.map(
    ({
      id,
      title,
      thumbnail,
      status,
      description,
      screenshots,
      game_url,
      platform,
      publisher,
      release_date,
      genre,
    }) => {
      const slug = getTheSlug(title);
      return {
        params: { slug },
        props: {
          id,
          title,
          thumbnail,
          status,
          description,
          screenshots,
          game_url,
          platform,
          publisher,
          release_date,
          genre,
        },
      };
    }
  );
}

const {
  title,
  thumbnail,
  status,
  description,
  screenshots,
  game_url,
  platform,
  publisher,
  release_date,
  genre,
} = Astro.props;
---

<MainLayout title={`${title} - Freeness`}>
  <main>
    <article>
      <div class='freegame'>
        <div class='freegame-main'>
          <div class='freegame-back-to-home'>
            <a href='/'>
              <svg
                xmlns='http://www.w3.org/2000/svg'
                fill='none'
                viewBox='0 0 24 24'
                stroke-width='1.5'
                stroke='currentColor'
                class='w-6 h-6'
              >
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  d='M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18'></path>
              </svg>
              Back
            </a>
          </div>
          <header class='freegame-header'>
            <div class='freegame-side'>
              <img src={thumbnail} alt={`${title} thumbnail`} />
            </div>
            <div class='freegame-content'>
              <h1>{title}</h1>
              <p class='freegame-genre'>{genre}</p>

              <div class='freegame-meta'>
                <p>Platform: {platform}</p>
                <p>Publisher: {publisher}</p>
                <p>Release Date: {release_date}</p>
              </div>
              <div class='freegame-link'>
                <a href={game_url} target='_blank'
                  >Link to Game <svg
                    xmlns='http://www.w3.org/2000/svg'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke-width='1.5'
                    stroke='currentColor'
                    class='w-6 h-6'
                  >
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      d='M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25'
                    ></path>
                  </svg>
                </a>
              </div>
            </div>
          </header>
          <section class='freegame-body'>
            <h2>Description</h2>
            <div class='description'><p>{description}</p></div>
          </section>
          <div class='gallery'>
            {screenshots.map((s) => <img src={s.image} alt={s.id} />)}
          </div>
        </div>
        <Footer />
      </div>
    </article>
  </main>
</MainLayout>
